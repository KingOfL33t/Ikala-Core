<?xml version="1.0" encoding="UTF-8"?>
<project name="Ikala-Core" default="compileTest" basedir=".">
	<!-- set global properties for this build -->
	<property name="src" location="src"/>
	<property name="test" location="test"/>
	<property name="build" location="bin"/>
	<property name="dist" location="Jars"/>
	<property name="doc" location="javadoc"/>
	<property name="lib.dir" location="thirdParty"/>
	<property name="packages" value="com.ikalagaming.*"/>
	
	<path id = "classpath.base">
		<pathelement location="${lib.dir}/luaj-jse-3.0.jar"/>
		<pathelement location="${lib.dir}/snakeyaml-1.14.jar"/>
		<pathelement location="${lib.dir}/jsemver-0.9.0.jar"/>
	</path>
		
	<path id = "classpath.test">
		<pathelement location="${lib.dir}/junit-4.12.jar"/>
		<pathelement location="${lib.dir}/hamcrest-all-1.3.jar"/>
		<pathelement location = "${test}" />
		<pathelement location = "${src}" />
		<path refid = "classpath.base" />
	</path>

	<target name="init">
		<!-- Create the time stamp -->
		<tstamp/>
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}"/>
	</target>

	<target name="compile" depends="init"
			description="compile the source">
		<!-- Compile the java code from ${src} into ${build} -->
		<javac srcdir="${src}" destdir="${build}" includeAntRuntime="false" debug="true">
			<classpath refid = "classpath.test"/>
		</javac>
		<copy verbose="${verbose}" todir="${build}" preservelastmodified="false">
			<fileset dir="${src}">
				<include name="**/*.properties" />
			</fileset>
		</copy> 
	</target>
	
	<target name="compileTest" depends="compile" 
			description="compile the JUnit tests">
		<javac srcdir="${test}" destdir="${build}" includeAntRuntime="false">
			<classpath refid = "classpath.test"/>
		</javac>
	</target>
		
	
	<target name = "test" depends = "compileTest">
		<junit>
			<classpath>
		    	<pathelement location="${build}" />    
				<path refid = "classpath.test" />
		    </classpath>
			<formatter type = "brief" usefile = "false" />
			<batchtest>
				<fileset dir="${test}" includes="**/Test*" />
			</batchtest>
		</junit>
	</target>

	<target name="javadoc"
			description="generate javadoc">
        <javadoc access="package" author="true" destdir="${doc}"
				nodeprecated="false" nodeprecatedlist="false"
				noindex="false" nonavbar="false" notree="false"
				packagenames="${packages}" source="1.8" sourcepath="${src}"
				splitindex="true" use="true" version="true">
        	<classpath refid = "classpath.test" />
		</javadoc>
			
    </target>

	<target name="dist" depends="compile,javadoc"
			description="generate the distribution jars">
		<!-- Create the distribution directory -->
		<mkdir dir="${dist}"/>

		<!-- Put everything in ${build} into the ICore-${DSTAMP}.jar file -->
		<jar jarfile="${dist}/ICore.jar" basedir="${build}">
			<zipgroupfileset dir="${lib.dir}" includes="luaj-jse-3.0.jar,snakeyaml-1.14.jar,jsemver-0.9.0.jar" />
		</jar>
		<!-- Put everything in ${src} into the ICore-source-${DSTAMP}.jar file -->
		<jar jarfile="${dist}/ICore-sources.jar" basedir="${src}"/>
		<!-- Put everything in ${doc} into the ICore-javadoc-${DSTAMP}.jar file -->
		<jar jarfile="${dist}/ICore-javadoc.jar" basedir="${doc}"/>
	</target>

	<target name="clean"
			description="clean up">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
	</target>
</project>
